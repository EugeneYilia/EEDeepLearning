data.space.attributes.dicrete={"user":"java.lang.String","item":"java.lang.String","feature":"int"}
data.space.attributes.continuous=["score","degree","coefficient"]

data.space.features={"user":"user","item":"item","score":"score","article":"item","feature":"feature","degree":"degree","left":"item","right":"item","coefficient":"coefficient"}

data.format=csv
data.convertors={"score":{"key":"data/test/product/scores.txt","value":{"user":0,"item":1,"score":2}},"article":{"key":"data/test/product/features.txt","value":{"article":0,"feature":1,"degree":2}},"relation":{"key":"data/test/product/relation.txt","value":{"left":0,"right":1,"coefficient":2}}}
data.splitter.delimiter=,

data.models={"model":["user","item","score"],"article":["article","feature","degree"],"relation":["left","right","coefficient"]}

data.splitter={"model":"model","type":"ratio","matchField":null,"sortField":null}

rec.recommender.class=rankvfcd
rec.iterator.learnrate=0.001
rec.iterator.learnrate.maximum=0.001
rec.factor.number=20
rec.iterator.maximum=5

rec.init.mean=0.0
rec.init.std=0.01

rec.user.regularization=0.1
rec.item.regularization=0.1

rec.rankvfcd.alpha=5
rec.rankvfcd.beta=10
rec.rankvfcd.gamma=50
rec.rankvfcd.lamutaE=50

data.convert.binarize.threshold=0.0